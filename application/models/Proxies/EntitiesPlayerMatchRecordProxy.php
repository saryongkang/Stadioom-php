<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class EntitiesPlayerMatchRecordProxy extends \Entities\PlayerMatchRecord implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setUserId($userId)
    {
        $this->__load();
        return parent::setUserId($userId);
    }

    public function getUserId()
    {
        $this->__load();
        return parent::getUserId();
    }

    public function setSportId($sportId)
    {
        $this->__load();
        return parent::setSportId($sportId);
    }

    public function getSportId()
    {
        $this->__load();
        return parent::getSportId();
    }

    public function setMatchId($matchId)
    {
        $this->__load();
        return parent::setMatchId($matchId);
    }

    public function getMatchId()
    {
        $this->__load();
        return parent::getMatchId();
    }

    public function setScore($score)
    {
        $this->__load();
        return parent::setScore($score);
    }

    public function getScore()
    {
        $this->__load();
        return parent::getScore();
    }

    public function setStarted($started)
    {
        $this->__load();
        return parent::setStarted($started);
    }

    public function getStarted()
    {
        $this->__load();
        return parent::getStarted();
    }

    public function setEnded($ended)
    {
        $this->__load();
        return parent::setEnded($ended);
    }

    public function getEnded()
    {
        $this->__load();
        return parent::getEnded();
    }

    public function setCanceled($canceled)
    {
        $this->__load();
        return parent::setCanceled($canceled);
    }

    public function getCanceled()
    {
        $this->__load();
        return parent::getCanceled();
    }

    public function setLocation($location)
    {
        $this->__load();
        return parent::setLocation($location);
    }

    public function getLocation()
    {
        $this->__load();
        return parent::getLocation();
    }

    public function setLatitude($latitude)
    {
        $this->__load();
        return parent::setLatitude($latitude);
    }

    public function getLatitude()
    {
        $this->__load();
        return parent::getLatitude();
    }

    public function setLongitude($longitude)
    {
        $this->__load();
        return parent::setLongitude($longitude);
    }

    public function getLongitude()
    {
        $this->__load();
        return parent::getLongitude();
    }

    public function setCreated($created)
    {
        $this->__load();
        return parent::setCreated($created);
    }

    public function getCreated()
    {
        $this->__load();
        return parent::getCreated();
    }

    public function setLastUpdated($lastUpdated)
    {
        $this->__load();
        return parent::setLastUpdated($lastUpdated);
    }

    public function getLastUpdated()
    {
        $this->__load();
        return parent::getLastUpdated();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'userId', 'sportId', 'matchId', 'score', 'started', 'ended', 'canceled', 'location', 'latitude', 'longitude', 'created', 'lastUpdated');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}