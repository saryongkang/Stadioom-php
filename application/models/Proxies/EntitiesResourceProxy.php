<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class EntitiesResourceProxy extends \Entities\Resource implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setNumId($numId)
    {
        $this->__load();
        return parent::setNumId($numId);
    }

    public function getNumId()
    {
        $this->__load();
        return parent::getNumId();
    }

    public function setStrId($strId)
    {
        $this->__load();
        return parent::setStrId($strId);
    }

    public function getStrId()
    {
        $this->__load();
        return parent::getStrId();
    }

    public function setMsg($msg)
    {
        $this->__load();
        return parent::setMsg($msg);
    }

    public function getMsg()
    {
        $this->__load();
        return parent::getMsg();
    }

    public function setMsgiOS($msgiOS)
    {
        $this->__load();
        return parent::setMsgiOS($msgiOS);
    }

    public function getMsgiOS()
    {
        $this->__load();
        return parent::getMsgiOS();
    }

    public function setMsgJS($msgJS)
    {
        $this->__load();
        return parent::setMsgJS($msgJS);
    }

    public function getMsgJS()
    {
        $this->__load();
        return parent::getMsgJS();
    }

    public function setLang($lang)
    {
        $this->__load();
        return parent::setLang($lang);
    }

    public function getLang()
    {
        $this->__load();
        return parent::getLang();
    }

    public function setLastUpdated($lastUpdated)
    {
        $this->__load();
        return parent::setLastUpdated($lastUpdated);
    }

    public function getLastUpdated()
    {
        $this->__load();
        return parent::getLastUpdated();
    }

    public function prePersist()
    {
        $this->__load();
        return parent::prePersist();
    }

    public function preUpdate()
    {
        $this->__load();
        return parent::preUpdate();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'numId', 'strId', 'msg', 'msgiOS', 'msgJS', 'lang', 'lastUpdated');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}